name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build without tests
      run: ./gradlew clean assemble
      
    - name: Deploy to Server
      if: success()
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
      run: |
        # Start ssh-agent and add key
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        
        # Create known_hosts file
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Add host key checking
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        
        # Create directory and copy files
        ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "mkdir -p ~/musinsa_observer"
        scp -r ./* $SSH_USER@$SSH_HOST:~/musinsa_observer/
        
        # Stop existing application and start new one
        ssh $SSH_USER@$SSH_HOST << 'EOF'
          pkill -f 'java -jar' || true
          cd ~/musinsa_observer/build/libs
          nohup java -jar -Dspring.profiles.active=prod team4-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
          echo "Application started"
EOF
